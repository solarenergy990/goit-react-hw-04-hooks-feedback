{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","utils/capitalizeFirstLetter.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","map","option","type","name","label","className","s","button","onClick","value","string","toUpperCase","slice","id","Notification","message","trim","Statistics","onGood","onNeutral","onBad","onTotalFeedback","onPositivePercentage","Container","props","children","mainContainer","Section","title","section","container","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","evt","target","Options","total","positive","Math","floor","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,MAAQ,yB,mBCApGD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,cAAgB,mC,gTC2BnBC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAE1C,OACE,mCACGA,EAAQC,KAAI,SAACC,GACZ,OACE,wBACEC,KAAK,SAELC,KAAMF,EAAOG,MACbC,UAAWC,IAAEC,OACbC,QAASV,EACT,aAAYG,EAAOQ,MANrB,UCZoCC,EDoBXT,EAAOQ,MCnBjCC,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,KDa/BX,EAAOY,ICdT,IAA+BH,QCS/BI,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKV,UAAU,eAAf,SAA+BU,EAAQC,QAAU,4BAAID,OCwB1CE,EAxBI,SAAC,GAMb,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,qBAEA,OACE,mCACuB,IAApBD,EACC,qBAAIhB,UAAU,OAAd,UACE,wCAAWa,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,QAG1B,cAAC,EAAD,CAAcP,QAAQ,yB,gBCdfQ,EALG,SAACC,GACjB,IAAQC,EAAaD,EAAbC,SACR,OAAO,qBAAKpB,UAAWC,IAAEoB,cAAlB,SAAkCD,K,gBCQ5BE,EAVC,SAACH,GACf,IAAQI,EAAoBJ,EAApBI,MAAOH,EAAaD,EAAbC,SACf,OACE,0BAASpB,UAAWC,IAAEuB,QAAtB,UACGD,EAAMZ,QAAU,oBAAIX,UAAWC,IAAEsB,MAAjB,SAAyBA,IAC1C,qBAAKvB,UAAWC,IAAEwB,UAAlB,SAA8BL,Q,OCmDrBM,EApDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAcMC,EAAqB,WAGzB,OAFsBN,EAAOE,EAAUE,GAgBzC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiB9B,gBAhCC,SAAC0C,GACC,SAApBA,EAAIC,OAAOtC,MACb+B,EAAQD,EAAO,GAEO,YAApBO,EAAIC,OAAOtC,MACbiC,EAAWD,EAAU,GAEC,QAApBK,EAAIC,OAAOtC,MACbmC,EAAOD,EAAM,IAwBwCtC,QAAS2C,MAE9D,cAAC,EAAD,CAASd,MAAM,aAAf,SACE,cAAC,EAAD,CACEV,OAAQe,EACRd,UAAWgB,EACXf,MAAOiB,EACPhB,gBAAiBkB,IACjBjB,qBAtBgC,WACtC,IAAMqB,EAAQJ,IACRK,EAAmB,IAAPX,EAAcU,EAEhC,OAAIC,EACI,GAAN,OAAUC,KAAKC,MAAMF,GAArB,KAEO,GAemBG,WC/ChCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d92e206.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2ySwx\",\"container\":\"Section_container__ucprD\",\"title\":\"Section_title__3v15J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1483a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Container_mainContainer__3oNvT\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport capitalizeFirstLetter from \"../../utils/capitalizeFirstLetter\";\n\nimport s from \"../FeedbackOptions/FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  // console.log(options);\n  return (\n    <>\n      {options.map((option) => {\n        return (\n          <button\n            type=\"button\"\n            key={option.id}\n            name={option.label}\n            className={s.button}\n            onClick={onLeaveFeedback}\n            data-value={option.value}\n          >\n            {capitalizeFirstLetter(option.value)}\n          </button>\n        );\n      })}\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","export default function capitalizeFirstLetter(string) {\n  return string[0].toUpperCase() + string.slice(1);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return (\n    <div className=\"notification\">{message.trim() && <p>{message}</p>}</div>\n  );\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Notification from \"../Notification/Notification\";\n\nconst Statistics = ({\n  onGood,\n  onNeutral,\n  onBad,\n  onTotalFeedback,\n  onPositivePercentage,\n}) => {\n  return (\n    <>\n      {onTotalFeedback !== 0 ? (\n        <ul className=\"list\">\n          <li>Good: {onGood}</li>\n          <li>Neutral: {onNeutral}</li>\n          <li>Bad: {onBad}</li>\n          <li>Total: {onTotalFeedback}</li>\n          <li>Positive feedback: {onPositivePercentage}</li>\n        </ul>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  onGood: PropTypes.number.isRequired,\n  onNeutral: PropTypes.number.isRequired,\n  onBad: PropTypes.number.isRequired,\n  onTotalFeedback: PropTypes.number.isRequired,\n  onPositivePercentage: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"../Container/Container.module.css\";\n\nconst Container = (props) => {\n  const { children } = props;\n  return <div className={s.mainContainer}>{children}</div>;\n};\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = (props) => {\n  const { title, children } = props;\n  return (\n    <section className={s.section}>\n      {title.trim() && <h2 className={s.title}>{title}</h2>}\n      <div className={s.container}>{children}</div>\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState } from \"react\";\n// import Feedback from \"../Feedback/Feedback\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Container from \"../Container/Container\";\nimport Section from \"../Section/Section\";\nimport Options from \"../../utils/buttonOptions.json\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (evt) => {\n    if (evt.target.name === \"good\") {\n      setGood(good + 1);\n    }\n    if (evt.target.name === \"neutral\") {\n      setNeutral(neutral + 1);\n    }\n    if (evt.target.name === \"bad\") {\n      setBad(bad + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const totalFeedback = good + neutral + bad;\n\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const positive = (good * 100) / total;\n\n    if (positive) {\n      return `${Math.floor(positive)}%`;\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={onLeaveFeedback} options={Options} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          onGood={good}\n          onNeutral={neutral}\n          onBad={bad}\n          onTotalFeedback={countTotalFeedback()}\n          onPositivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}